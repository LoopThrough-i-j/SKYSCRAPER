/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.util.*;
import javax.swing.*;
import java.awt.event.*;
import java.time.*;

public class StoreManagementUI extends javax.swing.JFrame {
    
    private SystemManager sysMgr;
    private DisplayManager dispMgr;
    private ArrayList<Stock> storeStock ;
    private int current = 0;
    
    public StoreManagementUI(SystemManager sysMgr, DisplayManager dispMgr) {
        
        lookSettingCode();
        this.sysMgr = sysMgr;
        this.dispMgr = dispMgr;
        
        addWindowListener(new WindowAdapter(){
                public void windowClosing(WindowEvent e){
                    
                    setVisible(false);
                    dispMgr.showHomeUI(true);
                }
            }
        );
        
        initComponents();
        setResizable(false);
        
        
        refreshStock();
        initializeUpdateInventory();
        
        storeNameField.addFocusListener(new FocusAdapter(){
            public void focusLost(FocusEvent fe){
                storeNameError();
            }
        });
        
        assert(sysMgr.searchByStoreId(sysMgr.getLoginId()) != null);
        storeNameField.setText(sysMgr.searchByStoreId(sysMgr.getLoginId()).getStoreName());
        
        storeNameError.setVisible(false);
    }    
    
    
    
    
    
    /**
     * Creates new form ChemistUI
     */
    private void refreshStock(){
        storeStock = sysMgr.getStock(sysMgr.getLoginId());
        ArrayList<Stock> nonEmpty = new ArrayList<>();
        for(Stock i : storeStock)
            if(i.getQuantity() != 0)
                nonEmpty.add(i);
        storeStock = nonEmpty;
    }
    
    private void clearFields(){
        productNameField.setText("");
        quantityField.setText("");
    }
    private void showFields(boolean show){
        productNameLabel.setVisible(show);
        quantityLabel.setVisible(show);
        productNameField.setVisible(show);
        quantityField.setVisible(show);
    }
    private void hideAll(){
        showFields(false);
        productNameError.setVisible(false);
        previousButton.setVisible(false);
        nextButton.setVisible(false);
        updateInventorySaveButton.setVisible(false);
    }

    private boolean quantityError(){
        int temp = 0;
        if(quantityField.getText().length() != 0)
            temp = Integer.parseInt(quantityField.getText());
        else
            quantityField.setText("0");
        if(quantityField.getText().length() != 0 && (temp > 0 || (updateInventorySaveButton.getText().equals("Done Editing") && temp >= 0)))
        {
            //productIdError.setVisible(false);
            return false;
        }
        //productIdError.setVisible(true);
        return true;
    }
    private boolean checkUpdateInventoryError(){
        return quantityError();
    }
    private void initializeUpdateInventory(){
        hideAll();
        nextButton.setEnabled(false);
        previousButton.setEnabled(false);
        quantityField.setDocument(new IntegerRangeDocument(0, Integer.MAX_VALUE));
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbedPane1 = new javax.swing.JTabbedPane();
        updateInventoryPane = new javax.swing.JPanel();
        previousButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        productNameField = new javax.swing.JTextField();
        quantityField = new javax.swing.JTextField();
        productNameLabel = new javax.swing.JLabel();
        quantityLabel = new javax.swing.JLabel();
        editButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        updateInventorySaveButton = new javax.swing.JButton();
        quantityError = new javax.swing.JLabel();
        productNameError = new javax.swing.JLabel();
        modifyDetailsPane = new javax.swing.JPanel();
        storeNameField = new javax.swing.JTextField();
        storeNameError = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        previousButton.setText("<< Previous");
        previousButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                previousButtonMouseClicked(evt);
            }
        });
        previousButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousButtonActionPerformed(evt);
            }
        });

        nextButton.setText("Next >>");
        nextButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nextButtonMouseClicked(evt);
            }
        });
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        productNameField.setEditable(false);
        productNameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                productNameFieldFocusLost(evt);
            }
        });
        productNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productNameFieldActionPerformed(evt);
            }
        });
        productNameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                productNameFieldKeyPressed(evt);
            }
        });

        quantityField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                quantityFieldFocusLost(evt);
            }
        });
        quantityField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityFieldActionPerformed(evt);
            }
        });
        quantityField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                quantityFieldKeyPressed(evt);
            }
        });

        productNameLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        productNameLabel.setText("Product Name");

        quantityLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        quantityLabel.setText("Quantity");

        editButton.setText(" Edit Existing Stock ");
        editButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editButtonMouseClicked(evt);
            }
        });

        addButton.setText("    Add New Stock    ");
        addButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addButtonMouseClicked(evt);
            }
        });
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        updateInventorySaveButton.setText("Save");
        updateInventorySaveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateInventorySaveButtonMouseClicked(evt);
            }
        });
        updateInventorySaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateInventorySaveButtonActionPerformed(evt);
            }
        });
        updateInventorySaveButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                updateInventorySaveButtonKeyPressed(evt);
            }
        });

        quantityError.setForeground(new java.awt.Color(255, 0, 51));
        quantityError.setText("Invalid Quantity");

        productNameError.setForeground(new java.awt.Color(255, 0, 51));
        productNameError.setText("Invalid Name");

        javax.swing.GroupLayout updateInventoryPaneLayout = new javax.swing.GroupLayout(updateInventoryPane);
        updateInventoryPane.setLayout(updateInventoryPaneLayout);
        updateInventoryPaneLayout.setHorizontalGroup(
            updateInventoryPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updateInventoryPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(updateInventoryPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updateInventoryPaneLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(previousButton, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(310, 310, 310)
                        .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(105, 105, 105))
                    .addGroup(updateInventoryPaneLayout.createSequentialGroup()
                        .addComponent(editButton)
                        .addGap(86, 86, 86)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(updateInventorySaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80))))
            .addGroup(updateInventoryPaneLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(updateInventoryPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(quantityError, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(updateInventoryPaneLayout.createSequentialGroup()
                        .addGroup(updateInventoryPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(quantityLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(productNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                            .addComponent(quantityField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(productNameField)
                            .addComponent(productNameError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        updateInventoryPaneLayout.setVerticalGroup(
            updateInventoryPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updateInventoryPaneLayout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(productNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(productNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(productNameError)
                .addGap(30, 30, 30)
                .addComponent(quantityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(quantityField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(quantityError)
                .addGap(74, 74, 74)
                .addGroup(updateInventoryPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editButton)
                    .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(updateInventorySaveButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(updateInventoryPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nextButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(previousButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(105, 105, 105))
        );

        tabbedPane1.addTab("UPDATE INVENTORY", updateInventoryPane);

        storeNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storeNameFieldActionPerformed(evt);
            }
        });
        storeNameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                storeNameFieldKeyPressed(evt);
            }
        });

        storeNameError.setForeground(new java.awt.Color(255, 0, 51));
        storeNameError.setText("This field cannot be empty");

        saveButton.setText("Save Changes");
        saveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveButtonMouseClicked(evt);
            }
        });
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Store Name");

        javax.swing.GroupLayout modifyDetailsPaneLayout = new javax.swing.GroupLayout(modifyDetailsPane);
        modifyDetailsPane.setLayout(modifyDetailsPaneLayout);
        modifyDetailsPaneLayout.setHorizontalGroup(
            modifyDetailsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modifyDetailsPaneLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(storeNameField)
                .addGap(52, 52, 52))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, modifyDetailsPaneLayout.createSequentialGroup()
                .addContainerGap(231, Short.MAX_VALUE)
                .addGroup(modifyDetailsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, modifyDetailsPaneLayout.createSequentialGroup()
                        .addGroup(modifyDetailsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(storeNameError, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE))
                        .addGap(263, 263, 263))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, modifyDetailsPaneLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(298, 298, 298))))
        );
        modifyDetailsPaneLayout.setVerticalGroup(
            modifyDetailsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modifyDetailsPaneLayout.createSequentialGroup()
                .addGap(126, 126, 126)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(storeNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(storeNameError, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(126, 126, 126)
                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(115, Short.MAX_VALUE))
        );

        tabbedPane1.addTab("MODIFY STORE DETAILS", modifyDetailsPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        tabbedPane1.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean storeNameError(){
        if(storeNameField.getText().length() == 0){
            storeNameError.setVisible(true);
            return true;
        }
        storeNameError.setVisible(false);
        return false;
    }
    
    private void previousButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_previousButtonActionPerformed

    private void productNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_productNameFieldActionPerformed

    private void productNameFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productNameFieldKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            productNameField.setFocusable(false);
            productNameField.setFocusable(true);
        }
    }//GEN-LAST:event_productNameFieldKeyPressed

    private void quantityFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantityFieldKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            quantityField.setFocusable(false);
            quantityField.setFocusable(true);
        }
    }//GEN-LAST:event_quantityFieldKeyPressed

    private void productNameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_productNameFieldFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_productNameFieldFocusLost

    private void quantityFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_quantityFieldFocusLost
        // TODO add your handling code here:
        quantityError();
    }//GEN-LAST:event_quantityFieldFocusLost

    private void addButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMouseClicked
        // TODO add your handling code here:
        showFields(true);
        updateInventorySaveButton.setVisible(true);
        addButton.setVisible(false);
        editButton.setVisible(false);
    }//GEN-LAST:event_addButtonMouseClicked

    private void updateInventorySaveButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_updateInventorySaveButtonKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateInventorySaveButtonKeyPressed

    private void updateInventorySaveButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateInventorySaveButtonMouseClicked
        // TODO add your handling code here:
        boolean flag = checkUpdateInventoryError();
        if(flag == true) 
            return;
        String temp = updateInventorySaveButton.getText();
        if(temp.equals("Done Editing")){
            refreshStock();
            //productIdField.setEditable(true);
            updateInventorySaveButton.setText("Save");
        }
        else{
            //sysMgr.addStock(productIdField.getText(), sysMgr.getLoginId(), Integer.parseInt(quantityField.getText()));
            refreshStock();
        }
        hideAll();
        clearFields();
        addButton.setVisible(true);
        editButton.setVisible(true);
    }//GEN-LAST:event_updateInventorySaveButtonMouseClicked

    private void displayCurrentStock(){
        Stock currentStock = storeStock.get(current);
        productNameField.setText(sysMgr.searchMedicineInFile(currentStock.getMedicineId()).getName());
        quantityField.setText(currentStock.getQuantity() + "");
        LocalDate currentDate = currentStock.getDate();
        if(current > 0)
            previousButton.setEnabled(true);
        else
            previousButton.setEnabled(false);
        if(current < storeStock.size() - 1)
            nextButton.setEnabled(true);
        else
            nextButton.setEnabled(false);
    }
    private void editButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editButtonMouseClicked
        // TODO add your handling code here:
        //Bug Fix : Nothing Shown In "EDIT EXISTING STOCK" If Store Does Not Have Any Stock
        //Test Case Number : 2.3.2
        /**
         * If the store stock is empty:
         * No action would be performed on clicking the "Edit Existing Stock" button.
         */
        if(storeStock.size() == 0){
            JOptionPane.showMessageDialog(this, "No Stock Present To Edit", "", JOptionPane.ERROR_MESSAGE);
            return;
        }
        //End Bug Fix : Nothing Shown In "EDIT EXISTING STOCK" If Store Does Not Have Any Stock
        current = 0;
        addButton.setVisible(false);
        editButton.setVisible(false);
        displayCurrentStock();
        showFields(true);
        updateInventorySaveButton.setText("Done Editing");
        updateInventorySaveButton.setVisible(true);
        previousButton.setVisible(true);
        nextButton.setVisible(true);
    }//GEN-LAST:event_editButtonMouseClicked

    private void recordChanged(){
        Stock currentStock = storeStock.get(current);
        currentStock.setQuantity(Integer.parseInt(quantityField.getText()));
    }
    private void previousButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_previousButtonMouseClicked
        // TODO add your handling code here:
        if(previousButton.isEnabled() == false || checkUpdateInventoryError() == true) return;
        recordChanged();
        current --;
        displayCurrentStock();
    }//GEN-LAST:event_previousButtonMouseClicked

    private void nextButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextButtonMouseClicked
        // TODO add your handling code here:
        if(nextButton.isEnabled() == false || checkUpdateInventoryError() == true) return;
        recordChanged();
        current ++;
        displayCurrentStock();
    }//GEN-LAST:event_nextButtonMouseClicked

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveButtonActionPerformed

    private void saveButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveButtonMouseClicked
        // TODO add your handling code here:
        if(storeNameError()) return;
        Store tempStore = sysMgr.searchByStoreId(sysMgr.getLoginId());
        tempStore.setIsVerified(false);
        tempStore.setStoreName(storeNameField.getText());
        //tempStore.setLocation(locationDropdown.getItemAt(locationDropdown.getSelectedIndex()));
        JOptionPane.showMessageDialog(this, "Changes have been saved");
        tabbedPane1.setSelectedIndex(1);
    }//GEN-LAST:event_saveButtonMouseClicked

    private void storeNameFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_storeNameFieldKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            storeNameField.setFocusable(false);
            storeNameField.setFocusable(true);
        }
    }//GEN-LAST:event_storeNameFieldKeyPressed

    private void storeNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storeNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_storeNameFieldActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addButtonActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nextButtonActionPerformed

    private void quantityFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityFieldActionPerformed

    private void updateInventorySaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateInventorySaveButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateInventorySaveButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    /*
    public static void main(String args[]) {
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChemistUI().setVisible(true);
            }
        });
    }
    
    */
    
    private void lookSettingCode() {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception e) {}
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel modifyDetailsPane;
    private javax.swing.JButton nextButton;
    private javax.swing.JButton previousButton;
    private javax.swing.JLabel productNameError;
    private javax.swing.JTextField productNameField;
    private javax.swing.JLabel productNameLabel;
    private javax.swing.JLabel quantityError;
    private javax.swing.JTextField quantityField;
    private javax.swing.JLabel quantityLabel;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel storeNameError;
    private javax.swing.JTextField storeNameField;
    private javax.swing.JTabbedPane tabbedPane1;
    private javax.swing.JPanel updateInventoryPane;
    private javax.swing.JButton updateInventorySaveButton;
    // End of variables declaration//GEN-END:variables
}
